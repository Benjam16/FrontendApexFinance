{"ast":null,"code":"import { useCallback } from 'react';\nimport useTombFinance from '../useTombFinance';\nimport useHandleTransactionReceipt from '../useHandleTransactionReceipt'; // import { BigNumber } from \"ethers\";\n\nimport { parseUnits } from 'ethers/lib/utils';\n\nconst useSwapTBondToTShare = () => {\n  const tombFinance = useTombFinance();\n  const handleTransactionReceipt = useHandleTransactionReceipt();\n  const handleSwapTShare = useCallback(tbondAmount => {\n    const tbondAmountBn = parseUnits(tbondAmount, 18);\n    handleTransactionReceipt(tombFinance.swapTBondToTShare(tbondAmountBn), `Swap ${tbondAmount} TBond to TShare`);\n  }, [tombFinance, handleTransactionReceipt]);\n  return {\n    onSwapTShare: handleSwapTShare\n  };\n};\n\nexport default useSwapTBondToTShare;","map":{"version":3,"sources":["/Users/eduarddriessen/Documents/GitHub/apx/src/hooks/TShareSwapper/useSwapTBondToTShare.ts"],"names":["useCallback","useTombFinance","useHandleTransactionReceipt","parseUnits","useSwapTBondToTShare","tombFinance","handleTransactionReceipt","handleSwapTShare","tbondAmount","tbondAmountBn","swapTBondToTShare","onSwapTShare"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,2BAAP,MAAwC,gCAAxC,C,CACA;;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAGA,MAAMC,oBAAoB,GAAG,MAAM;AACjC,QAAMC,WAAW,GAAGJ,cAAc,EAAlC;AACA,QAAMK,wBAAwB,GAAGJ,2BAA2B,EAA5D;AAEA,QAAMK,gBAAgB,GAAGP,WAAW,CAClCQ,WAAD,IAAyB;AACxB,UAAMC,aAAa,GAAGN,UAAU,CAACK,WAAD,EAAc,EAAd,CAAhC;AACAF,IAAAA,wBAAwB,CACvBD,WAAW,CAACK,iBAAZ,CAA8BD,aAA9B,CADuB,EAEtB,QAAOD,WAAY,kBAFG,CAAxB;AAIA,GAPkC,EAQnC,CAACH,WAAD,EAAcC,wBAAd,CARmC,CAApC;AAUA,SAAO;AAAEK,IAAAA,YAAY,EAAEJ;AAAhB,GAAP;AACD,CAfD;;AAiBA,eAAeH,oBAAf","sourcesContent":["import { useCallback } from 'react';\nimport useTombFinance from '../useTombFinance';\nimport useHandleTransactionReceipt from '../useHandleTransactionReceipt';\n// import { BigNumber } from \"ethers\";\nimport { parseUnits } from 'ethers/lib/utils';\n\n\nconst useSwapTBondToTShare = () => {\n  const tombFinance = useTombFinance();\n  const handleTransactionReceipt = useHandleTransactionReceipt();\n\n  const handleSwapTShare = useCallback(\n  \t(tbondAmount: string) => {\n\t  \tconst tbondAmountBn = parseUnits(tbondAmount, 18);\n\t  \thandleTransactionReceipt(\n\t  \t\ttombFinance.swapTBondToTShare(tbondAmountBn),\n\t  \t\t`Swap ${tbondAmount} TBond to TShare`\n\t  \t);\n  \t},\n  \t[tombFinance, handleTransactionReceipt]\n  );\n  return { onSwapTShare: handleSwapTShare };\n};\n\nexport default useSwapTBondToTShare;"]},"metadata":{},"sourceType":"module"}