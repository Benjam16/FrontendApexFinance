{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport useTombFinance from '../useTombFinance';\nimport useRefresh from '../useRefresh';\n\nconst useTShareSwapperStats = account => {\n  const [stat, setStat] = useState();\n  const {\n    fastRefresh\n    /*, slowRefresh*/\n\n  } = useRefresh();\n  const tombFinance = useTombFinance();\n  useEffect(() => {\n    async function fetchTShareSwapperStat() {\n      try {\n        if (tombFinance.myAccount) {\n          setStat(await tombFinance.getTShareSwapperStat(account));\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    }\n\n    fetchTShareSwapperStat();\n  }, [setStat, tombFinance, fastRefresh, account]);\n  return stat;\n};\n\nexport default useTShareSwapperStats;","map":{"version":3,"sources":["/Users/eduarddriessen/Documents/GitHub/apx/src/hooks/TShareSwapper/useTShareSwapperStats.ts"],"names":["useEffect","useState","useTombFinance","useRefresh","useTShareSwapperStats","account","stat","setStat","fastRefresh","tombFinance","fetchTShareSwapperStat","myAccount","getTShareSwapperStat","err","console","error"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AAEA,OAAOC,UAAP,MAAuB,eAAvB;;AAEA,MAAMC,qBAAqB,GAAIC,OAAD,IAAqB;AACjD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,EAAhC;AACA,QAAM;AAAEO,IAAAA;AAAW;;AAAb,MAAmCL,UAAU,EAAnD;AACA,QAAMM,WAAW,GAAGP,cAAc,EAAlC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeU,sBAAf,GAAwC;AACtC,UAAG;AACD,YAAGD,WAAW,CAACE,SAAf,EAA0B;AACxBJ,UAAAA,OAAO,CAAC,MAAME,WAAW,CAACG,oBAAZ,CAAiCP,OAAjC,CAAP,CAAP;AACD;AACF,OAJD,CAKA,OAAMQ,GAAN,EAAU;AACRC,QAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD;AACF;;AACDH,IAAAA,sBAAsB;AACvB,GAZQ,EAYN,CAACH,OAAD,EAAUE,WAAV,EAAuBD,WAAvB,EAAoCH,OAApC,CAZM,CAAT;AAcA,SAAOC,IAAP;AACD,CApBD;;AAsBA,eAAeF,qBAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport useTombFinance from '../useTombFinance';\nimport { TShareSwapperStat } from '../../tomb-finance/types';\nimport useRefresh from '../useRefresh';\n\nconst useTShareSwapperStats = (account: string) => {\n  const [stat, setStat] = useState<TShareSwapperStat>();\n  const { fastRefresh/*, slowRefresh*/ } = useRefresh();\n  const tombFinance = useTombFinance();\n\n  useEffect(() => {\n    async function fetchTShareSwapperStat() {\n      try{\n        if(tombFinance.myAccount) {\n          setStat(await tombFinance.getTShareSwapperStat(account));\n        }\n      }\n      catch(err){\n        console.error(err);\n      }\n    }\n    fetchTShareSwapperStat();\n  }, [setStat, tombFinance, fastRefresh, account]);\n\n  return stat;\n};\n\nexport default useTShareSwapperStats;"]},"metadata":{},"sourceType":"module"}