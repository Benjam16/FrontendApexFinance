{"ast":null,"code":"var _jsxFileName = \"/Users/eduarddriessen/Documents/GitHub/apx/src/views/Sbs/Sbs.tsx\";\nimport React, {\n/*useCallback, useEffect, */\nuseMemo, useState } from 'react';\nimport Page from '../../components/Page';\nimport PitImage from '../../assets/img/pit.png';\nimport { createGlobalStyle } from 'styled-components';\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\nimport { useWallet } from 'use-wallet';\nimport UnlockWallet from '../../components/UnlockWallet';\nimport PageHeader from '../../components/PageHeader';\nimport { Box\n/* Paper, Typography,*/\n, Button, Grid } from '@material-ui/core';\nimport styled from 'styled-components';\nimport Spacer from '../../components/Spacer';\nimport useTombFinance from '../../hooks/useTombFinance';\nimport { getDisplayBalance\n/*, getBalance*/\n} from '../../utils/formatBalance';\nimport { BigNumber\n/*, ethers*/\n} from 'ethers';\nimport useSwapTBondToTShare from '../../hooks/TShareSwapper/useSwapTBondToTShare';\nimport useApprove, { ApprovalState } from '../../hooks/useApprove';\nimport useTShareSwapperStats from '../../hooks/TShareSwapper/useTShareSwapperStats';\nimport TokenInput from '../../components/TokenInput';\nimport Card from '../../components/Card';\nimport CardContent from '../../components/CardContent';\nimport TokenSymbol from '../../components/TokenSymbol';\nconst BackgroundImage = createGlobalStyle`\n  body {\n    // background: url(${PitImage}) no-repeat !important;\n    // background-size: cover !important;\n    background-color: #ddd;\n  }\n`;\n\nfunction isNumeric(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\n\nconst Sbs = () => {\n  const {\n    path\n  } = useRouteMatch();\n  const {\n    account\n  } = useWallet();\n  const tombFinance = useTombFinance();\n  const [tbondAmount, setTbondAmount] = useState('');\n  const [tshareAmount, setTshareAmount] = useState('');\n  const [approveStatus, approve] = useApprove(tombFinance.ABOND, tombFinance.contracts.TShareSwapper.address);\n  const {\n    onSwapTShare\n  } = useSwapTBondToTShare();\n  const tshareSwapperStat = useTShareSwapperStats(account);\n  const tshareBalance = useMemo(() => tshareSwapperStat ? Number(tshareSwapperStat.tshareBalance) : 0, [tshareSwapperStat]);\n  const bondBalance = useMemo(() => tshareSwapperStat ? Number(tshareSwapperStat.tbondBalance) : 0, [tshareSwapperStat]);\n\n  const handleTBondChange = async e => {\n    if (e.currentTarget.value === '') {\n      setTbondAmount('');\n      setTshareAmount('');\n      return;\n    }\n\n    if (!isNumeric(e.currentTarget.value)) return;\n    setTbondAmount(e.currentTarget.value);\n    const updateTShareAmount = await tombFinance.estimateAmountOfTShare(e.currentTarget.value);\n    setTshareAmount(updateTShareAmount);\n  };\n\n  const handleTBondSelectMax = async () => {\n    setTbondAmount(String(bondBalance));\n    const updateTShareAmount = await tombFinance.estimateAmountOfTShare(String(bondBalance));\n    setTshareAmount(updateTShareAmount);\n  };\n\n  const handleTShareSelectMax = async () => {\n    setTshareAmount(String(tshareBalance));\n    const rateTSharePerTomb = (await tombFinance.getTShareSwapperStat(account)).rateTSharePerTomb;\n    const updateTBondAmount = BigNumber.from(10).pow(30).div(BigNumber.from(rateTSharePerTomb)).mul(Number(tshareBalance) * 1e6);\n    setTbondAmount(getDisplayBalance(updateTBondAmount, 18, 6));\n  };\n\n  const handleTShareChange = async e => {\n    const inputData = e.currentTarget.value;\n\n    if (inputData === '') {\n      setTshareAmount('');\n      setTbondAmount('');\n      return;\n    }\n\n    if (!isNumeric(inputData)) return;\n    setTshareAmount(inputData);\n    const rateTSharePerTomb = (await tombFinance.getTShareSwapperStat(account)).rateTSharePerTomb;\n    const updateTBondAmount = BigNumber.from(10).pow(30).div(BigNumber.from(rateTSharePerTomb)).mul(Number(inputData) * 1e6);\n    setTbondAmount(getDisplayBalance(updateTBondAmount, 18, 6));\n  };\n\n  return /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Page, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BackgroundImage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }), !!account ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: path,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PageHeader, {\n    icon: '🏦',\n    title: \"TBond -> TShare Swap\",\n    subtitle: \"Swap TBond to TShare\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    mt: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    spacing: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(StyledBoardroom, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(StyledCardsWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(StyledCardWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(StyledCardContentInner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(StyledCardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 29\n    }\n  }, \"TBonds\"), /*#__PURE__*/React.createElement(StyledExchanger, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(StyledToken, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(StyledCardIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TokenSymbol, {\n    symbol: tombFinance.ABOND.symbol,\n    size: 54,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 35\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TokenInput, {\n    onSelectMax: handleTBondSelectMax,\n    onChange: handleTBondChange,\n    value: tbondAmount,\n    max: bondBalance,\n    symbol: \"TBond\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 31\n    }\n  })), /*#__PURE__*/React.createElement(StyledDesc, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 29\n    }\n  }, `${bondBalance} ABOND Available in Wallet`))))), /*#__PURE__*/React.createElement(Spacer, {\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(StyledCardWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(StyledCardContentInner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(StyledCardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 29\n    }\n  }, \"TShare\"), /*#__PURE__*/React.createElement(StyledExchanger, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(StyledToken, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(StyledCardIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TokenSymbol, {\n    symbol: tombFinance.ASHARE.symbol,\n    size: 54,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 35\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TokenInput, {\n    onSelectMax: handleTShareSelectMax,\n    onChange: handleTShareChange,\n    value: tshareAmount,\n    max: tshareBalance,\n    symbol: \"TShare\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 31\n    }\n  })), /*#__PURE__*/React.createElement(StyledDesc, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 29\n    }\n  }, `${tshareBalance} ASHARE Available in Swapper`))))))))), /*#__PURE__*/React.createElement(Box, {\n    mt: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(StyledApproveWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 23\n    }\n  }, approveStatus !== ApprovalState.APPROVED ? /*#__PURE__*/React.createElement(Button, {\n    disabled: approveStatus !== ApprovalState.NOT_APPROVED,\n    color: \"primary\",\n    variant: \"contained\",\n    onClick: approve,\n    size: \"medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 25\n    }\n  }, \"Approve ABOND\") : /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    onClick: () => onSwapTShare(tbondAmount.toString()),\n    size: \"medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 25\n    }\n  }, \"Swap\")))))))) : /*#__PURE__*/React.createElement(UnlockWallet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 11\n    }\n  })));\n};\n\nconst StyledBoardroom = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\nconst StyledCardsWrapper = styled.div`\n  display: flex;\n  @media (max-width: 768px) {\n    width: 100%;\n    flex-flow: column nowrap;\n    align-items: center;\n  }\n`;\nconst StyledCardWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\nconst StyledApproveWrapper = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n`;\nconst StyledCardTitle = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 20px;\n  font-weight: 700;\n  height: 64px;\n  justify-content: center;\n  margin-top: ${props => -props.theme.spacing[3]}px;\n`;\nconst StyledCardIcon = styled.div`\n  background-color: ${props => props.theme.color.grey[900]};\n  width: 72px;\n  height: 72px;\n  border-radius: 36px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: ${props => props.theme.spacing[2]}px;\n`;\nconst StyledExchanger = styled.div`\n  align-items: center;\n  display: flex;\n  margin-bottom: ${props => props.theme.spacing[5]}px;\n`;\nconst StyledToken = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  font-weight: 600;\n`;\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`;\nconst StyledDesc = styled.span``;\nexport default Sbs;","map":{"version":3,"sources":["/Users/eduarddriessen/Documents/GitHub/apx/src/views/Sbs/Sbs.tsx"],"names":["React","useMemo","useState","Page","PitImage","createGlobalStyle","Route","Switch","useRouteMatch","useWallet","UnlockWallet","PageHeader","Box","Button","Grid","styled","Spacer","useTombFinance","getDisplayBalance","BigNumber","useSwapTBondToTShare","useApprove","ApprovalState","useTShareSwapperStats","TokenInput","Card","CardContent","TokenSymbol","BackgroundImage","isNumeric","n","isNaN","parseFloat","isFinite","Sbs","path","account","tombFinance","tbondAmount","setTbondAmount","tshareAmount","setTshareAmount","approveStatus","approve","ABOND","contracts","TShareSwapper","address","onSwapTShare","tshareSwapperStat","tshareBalance","Number","bondBalance","tbondBalance","handleTBondChange","e","currentTarget","value","updateTShareAmount","estimateAmountOfTShare","handleTBondSelectMax","String","handleTShareSelectMax","rateTSharePerTomb","getTShareSwapperStat","updateTBondAmount","from","pow","div","mul","handleTShareChange","inputData","symbol","ASHARE","APPROVED","NOT_APPROVED","toString","StyledBoardroom","StyledCardsWrapper","StyledCardWrapper","StyledApproveWrapper","StyledCardTitle","props","theme","spacing","StyledCardIcon","color","grey","StyledExchanger","StyledToken","StyledCardContentInner","StyledDesc","span"],"mappings":"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","sourcesContent":["import React, { /*useCallback, useEffect, */useMemo, useState } from 'react';\nimport Page from '../../components/Page';\nimport PitImage from '../../assets/img/pit.png';\nimport { createGlobalStyle } from 'styled-components';\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\nimport { useWallet } from 'use-wallet';\nimport UnlockWallet from '../../components/UnlockWallet';\nimport PageHeader from '../../components/PageHeader';\nimport { Box,/* Paper, Typography,*/ Button, Grid } from '@material-ui/core';\nimport styled from 'styled-components';\nimport Spacer from '../../components/Spacer';\nimport useTombFinance from '../../hooks/useTombFinance';\nimport { getDisplayBalance/*, getBalance*/ } from '../../utils/formatBalance';\nimport { BigNumber/*, ethers*/ } from 'ethers';\nimport useSwapTBondToTShare from '../../hooks/TShareSwapper/useSwapTBondToTShare';\nimport useApprove, { ApprovalState } from '../../hooks/useApprove';\nimport useTShareSwapperStats from '../../hooks/TShareSwapper/useTShareSwapperStats';\nimport TokenInput from '../../components/TokenInput';\nimport Card from '../../components/Card';\nimport CardContent from '../../components/CardContent';\nimport TokenSymbol from '../../components/TokenSymbol';\n\nconst BackgroundImage = createGlobalStyle`\n  body {\n    // background: url(${PitImage}) no-repeat !important;\n    // background-size: cover !important;\n    background-color: #ddd;\n  }\n`;\n\nfunction isNumeric(n: any) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\n\nconst Sbs: React.FC = () => {\n  const { path } = useRouteMatch();\n  const { account } = useWallet();\n  const tombFinance = useTombFinance();\n  const [tbondAmount, setTbondAmount] = useState('');\n  const [tshareAmount, setTshareAmount] = useState('');\n\n  const [approveStatus, approve] = useApprove(tombFinance.ABOND, tombFinance.contracts.TShareSwapper.address);\n  const { onSwapTShare } = useSwapTBondToTShare();\n  const tshareSwapperStat = useTShareSwapperStats(account);\n\n  const tshareBalance = useMemo(() => (tshareSwapperStat ? Number(tshareSwapperStat.tshareBalance) : 0), [tshareSwapperStat]);\n  const bondBalance = useMemo(() => (tshareSwapperStat ? Number(tshareSwapperStat.tbondBalance) : 0), [tshareSwapperStat]);\n\n  const handleTBondChange = async (e: any) => {\n    if (e.currentTarget.value === '') {\n      setTbondAmount('');\n      setTshareAmount('');\n      return\n    }\n    if (!isNumeric(e.currentTarget.value)) return;\n    setTbondAmount(e.currentTarget.value);\n    const updateTShareAmount = await tombFinance.estimateAmountOfTShare(e.currentTarget.value);\n    setTshareAmount(updateTShareAmount);  \n  };\n\n  const handleTBondSelectMax = async () => {\n    setTbondAmount(String(bondBalance));\n    const updateTShareAmount = await tombFinance.estimateAmountOfTShare(String(bondBalance));\n    setTshareAmount(updateTShareAmount); \n  };\n\n  const handleTShareSelectMax = async () => {\n    setTshareAmount(String(tshareBalance));\n    const rateTSharePerTomb = (await tombFinance.getTShareSwapperStat(account)).rateTSharePerTomb;\n    const updateTBondAmount = ((BigNumber.from(10).pow(30)).div(BigNumber.from(rateTSharePerTomb))).mul(Number(tshareBalance) * 1e6);\n    setTbondAmount(getDisplayBalance(updateTBondAmount, 18, 6));\n  };\n\n  const handleTShareChange = async (e: any) => {\n    const inputData = e.currentTarget.value;\n    if (inputData === '') {\n      setTshareAmount('');\n      setTbondAmount('');\n      return\n    }\n    if (!isNumeric(inputData)) return;\n    setTshareAmount(inputData);\n    const rateTSharePerTomb = (await tombFinance.getTShareSwapperStat(account)).rateTSharePerTomb;\n    const updateTBondAmount = ((BigNumber.from(10).pow(30)).div(BigNumber.from(rateTSharePerTomb))).mul(Number(inputData) * 1e6);\n    setTbondAmount(getDisplayBalance(updateTBondAmount, 18, 6));\n  }\n\n  return (\n    <Switch>\n      <Page>\n        <BackgroundImage />\n        {!!account ? (\n          <>\n            <Route exact path={path}>\n              <PageHeader icon={'🏦'} title=\"TBond -> TShare Swap\" subtitle=\"Swap TBond to TShare\" />\n            </Route>\n            <Box mt={5}>\n              <Grid container justify=\"center\" spacing={6}>\n                <StyledBoardroom>\n                  <StyledCardsWrapper>\n                    <StyledCardWrapper>\n                      <Card>\n                        <CardContent>\n                          <StyledCardContentInner>\n                            <StyledCardTitle>TBonds</StyledCardTitle>\n                            <StyledExchanger>\n                              <StyledToken>\n                                <StyledCardIcon>\n                                  <TokenSymbol symbol={tombFinance.ABOND.symbol} size={54} />\n                                </StyledCardIcon>\n                              </StyledToken>\n                            </StyledExchanger>\n                            <Grid item xs={12}>\n                              <TokenInput\n                                onSelectMax={handleTBondSelectMax}\n                                onChange={handleTBondChange}\n                                value={tbondAmount}\n                                max={bondBalance}\n                                symbol=\"TBond\"\n                              ></TokenInput>\n                            </Grid>\n                            <StyledDesc>{`${bondBalance} ABOND Available in Wallet`}</StyledDesc>\n                          </StyledCardContentInner>\n                        </CardContent>\n                      </Card>\n                    </StyledCardWrapper>\n                    <Spacer size=\"lg\"/>\n                    <StyledCardWrapper>\n                      <Card>\n                        <CardContent>\n                          <StyledCardContentInner>\n                            <StyledCardTitle>TShare</StyledCardTitle>\n                            <StyledExchanger>\n                              <StyledToken>\n                                <StyledCardIcon>\n                                  <TokenSymbol symbol={tombFinance.ASHARE.symbol} size={54} />\n                                </StyledCardIcon>\n                              </StyledToken>\n                            </StyledExchanger>\n                            <Grid item xs={12}>\n                              <TokenInput\n                                onSelectMax={handleTShareSelectMax}\n                                onChange={handleTShareChange}\n                                value={tshareAmount}\n                                max={tshareBalance}\n                                symbol=\"TShare\"\n                              ></TokenInput>\n                            </Grid>\n                            <StyledDesc>{`${tshareBalance} ASHARE Available in Swapper`}</StyledDesc>\n                          </StyledCardContentInner>\n                        </CardContent>\n                      </Card>\n              \n                    </StyledCardWrapper>\n                  </StyledCardsWrapper>\n                </StyledBoardroom>\n              </Grid>\n            </Box>\n\n            <Box mt={5}>\n              <Grid container justify=\"center\">\n                <Grid item xs={8}>\n                  <Card>\n                    <CardContent>\n                      <StyledApproveWrapper>\n                      {approveStatus !== ApprovalState.APPROVED ? (\n                        <Button\n                          disabled={approveStatus !== ApprovalState.NOT_APPROVED}\n                          color=\"primary\"\n                          variant=\"contained\"\n                          onClick={approve}\n                          size=\"medium\"\n                        >\n                          Approve ABOND\n                        </Button>\n                      ) : (\n                        <Button\n                          color=\"primary\"\n                          variant=\"contained\"\n                          onClick={() => onSwapTShare(tbondAmount.toString())}\n                          size=\"medium\"\n                        >\n                          Swap\n                        </Button>\n                      )}\n                      </StyledApproveWrapper>\n                    </CardContent>\n                  </Card>\n                </Grid>\n              </Grid>\n            </Box>\n          </>\n        ) : (\n          <UnlockWallet />\n        )}\n      </Page>\n    </Switch>\n  );\n};\n\nconst StyledBoardroom = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst StyledCardsWrapper = styled.div`\n  display: flex;\n  @media (max-width: 768px) {\n    width: 100%;\n    flex-flow: column nowrap;\n    align-items: center;\n  }\n`;\n\nconst StyledCardWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst StyledApproveWrapper = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n`;\nconst StyledCardTitle = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 20px;\n  font-weight: 700;\n  height: 64px;\n  justify-content: center;\n  margin-top: ${(props) => -props.theme.spacing[3]}px;\n`;\n\nconst StyledCardIcon = styled.div`\n  background-color: ${(props) => props.theme.color.grey[900]};\n  width: 72px;\n  height: 72px;\n  border-radius: 36px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: ${(props) => props.theme.spacing[2]}px;\n`;\n\nconst StyledExchanger = styled.div`\n  align-items: center;\n  display: flex;\n  margin-bottom: ${(props) => props.theme.spacing[5]}px;\n`;\n\nconst StyledToken = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  font-weight: 600;\n`;\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nconst StyledDesc = styled.span``;\n\nexport default Sbs;\n"]},"metadata":{},"sourceType":"module"}