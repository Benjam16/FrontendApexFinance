{"ast":null,"code":"var _jsxFileName = \"/Users/eduarddriessen/Documents/GitHub/apx/src/views/Liquidity/Liquidity.js\";\nimport React, { useMemo, useState } from 'react';\nimport Page from '../../components/Page';\nimport { createGlobalStyle } from 'styled-components';\nimport HomeImage from '../../assets/img/home.png';\nimport useLpStats from '../../hooks/useLpStats';\nimport { Box, Button, Grid, Paper, Typography } from '@material-ui/core';\nimport useTombStats from '../../hooks/useTombStats';\nimport TokenInput from '../../components/TokenInput';\nimport useTombFinance from '../../hooks/useTombFinance';\nimport { useWallet } from 'use-wallet';\nimport useTokenBalance from '../../hooks/useTokenBalance';\nimport { getDisplayBalance } from '../../utils/formatBalance';\nimport useApproveTaxOffice from '../../hooks/useApproveTaxOffice';\nimport { ApprovalState } from '../../hooks/useApprove';\nimport useProvideTombFtmLP from '../../hooks/useProvideTombFtmLP';\nimport { Alert } from '@material-ui/lab';\nconst BackgroundImage = createGlobalStyle`\n  body {\n    // background: url(${HomeImage}) no-repeat !important;\n    // background-size: cover !important;\n    background-color: #ddd;\n  }\n`;\n\nfunction isNumeric(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\n\nconst ProvideLiquidity = () => {\n  const [tombAmount, setTombAmount] = useState(0);\n  const [ftmAmount, setFtmAmount] = useState(0);\n  const [lpTokensAmount, setLpTokensAmount] = useState(0);\n  const {\n    balance\n  } = useWallet();\n  const tombStats = useTombStats();\n  const tombFinance = useTombFinance();\n  const [approveTaxOfficeStatus, approveTaxOffice] = useApproveTaxOffice();\n  const tombBalance = useTokenBalance(tombFinance.TOMB);\n  const ftmBalance = (balance / 1e18).toFixed(4);\n  const {\n    onProvideTombFtmLP\n  } = useProvideTombFtmLP();\n  const tombFtmLpStats = useLpStats('TOMB-FTM-LP');\n  const tombLPStats = useMemo(() => tombFtmLpStats ? tombFtmLpStats : null, [tombFtmLpStats]);\n  const tombPriceInFTM = useMemo(() => tombStats ? Number(tombStats.tokenInFtm).toFixed(2) : null, [tombStats]);\n  const ftmPriceInTOMB = useMemo(() => tombStats ? Number(1 / tombStats.tokenInFtm).toFixed(2) : null, [tombStats]); // const classes = useStyles();\n\n  const handleTombChange = async e => {\n    if (e.currentTarget.value === '' || e.currentTarget.value === 0) {\n      setTombAmount(e.currentTarget.value);\n    }\n\n    if (!isNumeric(e.currentTarget.value)) return;\n    setTombAmount(e.currentTarget.value);\n    const quoteFromSpooky = await tombFinance.quoteFromSpooky(e.currentTarget.value, 'TOMB');\n    setFtmAmount(quoteFromSpooky);\n    setLpTokensAmount(quoteFromSpooky / tombLPStats.ftmAmount);\n  };\n\n  const handleFtmChange = async e => {\n    if (e.currentTarget.value === '' || e.currentTarget.value === 0) {\n      setFtmAmount(e.currentTarget.value);\n    }\n\n    if (!isNumeric(e.currentTarget.value)) return;\n    setFtmAmount(e.currentTarget.value);\n    const quoteFromSpooky = await tombFinance.quoteFromSpooky(e.currentTarget.value, 'FTM');\n    setTombAmount(quoteFromSpooky);\n    setLpTokensAmount(quoteFromSpooky / tombLPStats.tokenAmount);\n  };\n\n  const handleTombSelectMax = async () => {\n    const quoteFromSpooky = await tombFinance.quoteFromSpooky(getDisplayBalance(tombBalance), 'TOMB');\n    setTombAmount(getDisplayBalance(tombBalance));\n    setFtmAmount(quoteFromSpooky);\n    setLpTokensAmount(quoteFromSpooky / tombLPStats.ftmAmount);\n  };\n\n  const handleFtmSelectMax = async () => {\n    const quoteFromSpooky = await tombFinance.quoteFromSpooky(ftmBalance, 'FTM');\n    setFtmAmount(ftmBalance);\n    setTombAmount(quoteFromSpooky);\n    setLpTokensAmount(ftmBalance / tombLPStats.ftmAmount);\n  };\n\n  return /*#__PURE__*/React.createElement(Page, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(BackgroundImage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    color: \"textPrimary\",\n    align: \"center\",\n    variant: \"h3\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, \"Provide Liquidity\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    style: {\n      width: '600px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    variant: \"filled\",\n    severity: \"warning\",\n    style: {\n      marginBottom: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \"This and \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://spookyswap.finance/\",\n    rel: \"noopener noreferrer\",\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }, \"Spookyswap\"), \" are the only ways to provide Liquidity on TOMB-FTM pair without paying tax.\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    mt: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    style: {\n      borderRadius: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    p: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(TokenInput, {\n    onSelectMax: handleTombSelectMax,\n    onChange: handleTombChange,\n    value: tombAmount,\n    max: getDisplayBalance(tombBalance),\n    symbol: 'TOMB',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(TokenInput, {\n    onSelectMax: handleFtmSelectMax,\n    onChange: handleFtmChange,\n    value: ftmAmount,\n    max: ftmBalance,\n    symbol: 'FTM',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 25\n    }\n  }, \"1 TOMB = \", tombPriceInFTM, \" FTM\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 25\n    }\n  }, \"1 FTM = \", ftmPriceInTOMB, \" TOMB\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 25\n    }\n  }, \"LP tokens \\u2248 \", lpTokensAmount.toFixed(2))), /*#__PURE__*/React.createElement(Grid, {\n    xs: 12,\n    justifyContent: \"center\",\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 23\n    }\n  }, approveTaxOfficeStatus === ApprovalState.APPROVED ? /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: () => onProvideTombFtmLP(ftmAmount.toString(), tombAmount.toString()),\n    color: \"primary\",\n    style: {\n      margin: '0 10px',\n      color: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 27\n    }\n  }, \"Supply\") : /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: () => approveTaxOffice(),\n    color: \"secondary\",\n    style: {\n      margin: '0 10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 27\n    }\n  }, \"Approve\")))))))))));\n};\n\nexport default ProvideLiquidity;","map":{"version":3,"sources":["/Users/eduarddriessen/Documents/GitHub/apx/src/views/Liquidity/Liquidity.js"],"names":["React","useMemo","useState","Page","createGlobalStyle","HomeImage","useLpStats","Box","Button","Grid","Paper","Typography","useTombStats","TokenInput","useTombFinance","useWallet","useTokenBalance","getDisplayBalance","useApproveTaxOffice","ApprovalState","useProvideTombFtmLP","Alert","BackgroundImage","isNumeric","n","isNaN","parseFloat","isFinite","ProvideLiquidity","tombAmount","setTombAmount","ftmAmount","setFtmAmount","lpTokensAmount","setLpTokensAmount","balance","tombStats","tombFinance","approveTaxOfficeStatus","approveTaxOffice","tombBalance","TOMB","ftmBalance","toFixed","onProvideTombFtmLP","tombFtmLpStats","tombLPStats","tombPriceInFTM","Number","tokenInFtm","ftmPriceInTOMB","handleTombChange","e","currentTarget","value","quoteFromSpooky","handleFtmChange","tokenAmount","handleTombSelectMax","handleFtmSelectMax","width","marginBottom","borderRadius","textAlign","APPROVED","toString","margin","color"],"mappings":"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","sourcesContent":["import React, { useMemo, useState } from 'react';\nimport Page from '../../components/Page';\nimport { createGlobalStyle } from 'styled-components';\nimport HomeImage from '../../assets/img/home.png';\nimport useLpStats from '../../hooks/useLpStats';\nimport { Box, Button, Grid, Paper, Typography } from '@material-ui/core';\nimport useTombStats from '../../hooks/useTombStats';\nimport TokenInput from '../../components/TokenInput';\nimport useTombFinance from '../../hooks/useTombFinance';\nimport { useWallet } from 'use-wallet';\nimport useTokenBalance from '../../hooks/useTokenBalance';\nimport { getDisplayBalance } from '../../utils/formatBalance';\nimport useApproveTaxOffice from '../../hooks/useApproveTaxOffice';\nimport { ApprovalState } from '../../hooks/useApprove';\nimport useProvideTombFtmLP from '../../hooks/useProvideTombFtmLP';\nimport { Alert } from '@material-ui/lab';\n\nconst BackgroundImage = createGlobalStyle`\n  body {\n    // background: url(${HomeImage}) no-repeat !important;\n    // background-size: cover !important;\n    background-color: #ddd;\n  }\n`;\nfunction isNumeric(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\n\nconst ProvideLiquidity = () => {\n  const [tombAmount, setTombAmount] = useState(0);\n  const [ftmAmount, setFtmAmount] = useState(0);\n  const [lpTokensAmount, setLpTokensAmount] = useState(0);\n  const { balance } = useWallet();\n  const tombStats = useTombStats();\n  const tombFinance = useTombFinance();\n  const [approveTaxOfficeStatus, approveTaxOffice] = useApproveTaxOffice();\n  const tombBalance = useTokenBalance(tombFinance.TOMB);\n  const ftmBalance = (balance / 1e18).toFixed(4);\n  const { onProvideTombFtmLP } = useProvideTombFtmLP();\n  const tombFtmLpStats = useLpStats('TOMB-FTM-LP');\n\n  const tombLPStats = useMemo(() => (tombFtmLpStats ? tombFtmLpStats : null), [tombFtmLpStats]);\n  const tombPriceInFTM = useMemo(() => (tombStats ? Number(tombStats.tokenInFtm).toFixed(2) : null), [tombStats]);\n  const ftmPriceInTOMB = useMemo(() => (tombStats ? Number(1 / tombStats.tokenInFtm).toFixed(2) : null), [tombStats]);\n  // const classes = useStyles();\n\n  const handleTombChange = async (e) => {\n    if (e.currentTarget.value === '' || e.currentTarget.value === 0) {\n      setTombAmount(e.currentTarget.value);\n    }\n    if (!isNumeric(e.currentTarget.value)) return;\n    setTombAmount(e.currentTarget.value);\n    const quoteFromSpooky = await tombFinance.quoteFromSpooky(e.currentTarget.value, 'TOMB');\n    setFtmAmount(quoteFromSpooky);\n    setLpTokensAmount(quoteFromSpooky / tombLPStats.ftmAmount);\n  };\n\n  const handleFtmChange = async (e) => {\n    if (e.currentTarget.value === '' || e.currentTarget.value === 0) {\n      setFtmAmount(e.currentTarget.value);\n    }\n    if (!isNumeric(e.currentTarget.value)) return;\n    setFtmAmount(e.currentTarget.value);\n    const quoteFromSpooky = await tombFinance.quoteFromSpooky(e.currentTarget.value, 'FTM');\n    setTombAmount(quoteFromSpooky);\n\n    setLpTokensAmount(quoteFromSpooky / tombLPStats.tokenAmount);\n  };\n  const handleTombSelectMax = async () => {\n    const quoteFromSpooky = await tombFinance.quoteFromSpooky(getDisplayBalance(tombBalance), 'TOMB');\n    setTombAmount(getDisplayBalance(tombBalance));\n    setFtmAmount(quoteFromSpooky);\n    setLpTokensAmount(quoteFromSpooky / tombLPStats.ftmAmount);\n  };\n  const handleFtmSelectMax = async () => {\n    const quoteFromSpooky = await tombFinance.quoteFromSpooky(ftmBalance, 'FTM');\n    setFtmAmount(ftmBalance);\n    setTombAmount(quoteFromSpooky);\n    setLpTokensAmount(ftmBalance / tombLPStats.ftmAmount);\n  };\n  return (\n    <Page>\n      <BackgroundImage />\n      <Typography color=\"textPrimary\" align=\"center\" variant=\"h3\" gutterBottom>\n        Provide Liquidity\n      </Typography>\n\n      <Grid container justify=\"center\">\n        <Box style={{ width: '600px' }}>\n          <Alert variant=\"filled\" severity=\"warning\" style={{ marginBottom: '10px' }}>\n            <b>This and <a href=\"https://spookyswap.finance/\"  rel=\"noopener noreferrer\" target=\"_blank\">Spookyswap</a> are the only ways to provide Liquidity on TOMB-FTM pair without paying tax.</b>\n          </Alert>\n          <Grid item xs={12} sm={12}>\n            <Paper>\n              <Box mt={4}>\n                <Grid item xs={12} sm={12} style={{ borderRadius: 15 }}>\n                  <Box p={4}>\n                    <Grid container>\n                      <Grid item xs={12}>\n                        <TokenInput\n                          onSelectMax={handleTombSelectMax}\n                          onChange={handleTombChange}\n                          value={tombAmount}\n                          max={getDisplayBalance(tombBalance)}\n                          symbol={'TOMB'}\n                        ></TokenInput>\n                      </Grid>\n                      <Grid item xs={12}>\n                        <TokenInput\n                          onSelectMax={handleFtmSelectMax}\n                          onChange={handleFtmChange}\n                          value={ftmAmount}\n                          max={ftmBalance}\n                          symbol={'FTM'}\n                        ></TokenInput>\n                      </Grid>\n                      <Grid item xs={12}>\n                        <p>1 TOMB = {tombPriceInFTM} FTM</p>\n                        <p>1 FTM = {ftmPriceInTOMB} TOMB</p>\n                        <p>LP tokens ≈ {lpTokensAmount.toFixed(2)}</p>\n                      </Grid>\n                      <Grid xs={12} justifyContent=\"center\" style={{ textAlign: 'center' }}>\n                        {approveTaxOfficeStatus === ApprovalState.APPROVED ? (\n                          <Button\n                            variant=\"contained\"\n                            onClick={() => onProvideTombFtmLP(ftmAmount.toString(), tombAmount.toString())}\n                            color=\"primary\"\n                            style={{ margin: '0 10px', color: '#fff' }}\n                          >\n                            Supply\n                          </Button>\n                        ) : (\n                          <Button\n                            variant=\"contained\"\n                            onClick={() => approveTaxOffice()}\n                            color=\"secondary\"\n                            style={{ margin: '0 10px' }}\n                          >\n                            Approve\n                          </Button>\n                        )}\n                      </Grid>\n                    </Grid>\n                  </Box>\n                </Grid>\n              </Box>\n            </Paper>\n          </Grid>\n        </Box>\n      </Grid>\n    </Page>\n  );\n};\n\nexport default ProvideLiquidity;\n"]},"metadata":{},"sourceType":"module"}