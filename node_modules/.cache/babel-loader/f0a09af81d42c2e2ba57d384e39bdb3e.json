{"ast":null,"code":"var _jsxFileName = \"/Users/eduarddriessen/Documents/GitHub/apx/src/views/Staking/Staking.js\";\nimport React from 'react';\nimport { useWallet } from 'use-wallet';\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\nimport Bank from '../Bank';\nimport { Box, Container, Typography, Grid } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport UnlockWallet from '../../components/UnlockWallet';\nimport Page from '../../components/Page';\nimport StakeCard from './StakeCard';\nimport CemeteryImage from '../../assets/img/cemetery.png';\nimport { createGlobalStyle } from 'styled-components';\nimport useBanks from '../../hooks/useBanks';\nconst BackgroundImage = createGlobalStyle`\n  body {\n    // background: url(${CemeteryImage}) no-repeat !important;\n    // background-size: cover !important;\n    background-color: #181821;\n  }\n`;\n\nconst Staking = () => {\n  const [banks] = useBanks();\n  const {\n    path\n  } = useRouteMatch();\n  const {\n    account\n  } = useWallet();\n  const activeBanks = banks.filter(bank => !bank.finished);\n  return /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Page, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: path,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BackgroundImage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"animateme\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"bg-bubbles\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }))), !!account ? /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      color: '#fff'\n    },\n    align: \"left\",\n    variant: \"h5\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, \"Staking\"), /*#__PURE__*/React.createElement(Box, {\n    mt: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    hidden: activeBanks.filter(bank => bank.sectionInUI === 2).length === 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      color: '#fff'\n    },\n    align: \"center\",\n    variant: \"h5\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 19\n    }\n  }, \"Earn ASHARE by staking LP tokens\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }\n  }, activeBanks.filter(bank => bank.sectionInUI === 2).map(bank => /*#__PURE__*/React.createElement(React.Fragment, {\n    key: bank.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(StakeCard, {\n    bank: bank,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 27\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    hidden: activeBanks.filter(bank => bank.sectionInUI === 1).length === 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"textPrimary\",\n    variant: \"h6\",\n    gutterBottom: true,\n    style: {\n      marginTop: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 19\n    }\n  }, \"Earn TOMB by staking LP\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    style: {\n      marginTop: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 19\n    }\n  }, activeBanks.filter(bank => bank.sectionInUI === 1).map(bank => /*#__PURE__*/React.createElement(React.Fragment, {\n    key: bank.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(StakeCard, {\n    bank: bank,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 27\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    hidden: activeBanks.filter(bank => bank.sectionInUI === 0).length === 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"textPrimary\",\n    variant: \"h6\",\n    gutterBottom: true,\n    style: {\n      marginTop: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 19\n    }\n  }, \"Genesis Pools\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 19\n    }\n  }, activeBanks.filter(bank => bank.sectionInUI === 0).map(bank => /*#__PURE__*/React.createElement(React.Fragment, {\n    key: bank.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(StakeCard, {\n    bank: bank,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 27\n    }\n  }))))))) : /*#__PURE__*/React.createElement(UnlockWallet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: `${path}/:bankId`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BackgroundImage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Bank, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default Staking;","map":{"version":3,"sources":["/Users/eduarddriessen/Documents/GitHub/apx/src/views/Staking/Staking.js"],"names":["React","useWallet","Route","Switch","useRouteMatch","Bank","Box","Container","Typography","Grid","Alert","UnlockWallet","Page","StakeCard","CemeteryImage","createGlobalStyle","useBanks","BackgroundImage","Staking","banks","path","account","activeBanks","filter","bank","finished","color","sectionInUI","length","map","name","marginTop"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useWallet } from 'use-wallet';\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\nimport Bank from '../Bank';\n\nimport { Box, Container, Typography, Grid } from '@material-ui/core';\n\nimport { Alert } from '@material-ui/lab';\n\nimport UnlockWallet from '../../components/UnlockWallet';\nimport Page from '../../components/Page';\nimport StakeCard from './StakeCard';\nimport CemeteryImage from '../../assets/img/cemetery.png';\nimport { createGlobalStyle } from 'styled-components';\n\nimport useBanks from '../../hooks/useBanks';\n\nconst BackgroundImage = createGlobalStyle`\n  body {\n    // background: url(${CemeteryImage}) no-repeat !important;\n    // background-size: cover !important;\n    background-color: #181821;\n  }\n`;\n\nconst Staking = () => {\n  const [banks] = useBanks();\n  const { path } = useRouteMatch();\n  const { account } = useWallet();\n  const activeBanks = banks.filter((bank) => !bank.finished);\n  return (\n    <Switch>\n      <Page>\n        <Route exact path={path}>\n          <BackgroundImage />\n          <div className=\"animateme\">\n            <ul className=\"bg-bubbles\">\n              <li></li>\n              <li></li>\n              <li></li>\n              <li></li>\n              <li></li>\n              <li></li>\n              <li></li>\n              <li></li>\n              <li></li>\n              <li></li>\n              <li></li>\n              <li></li>\n              <li></li>\n            </ul>\n          </div>\n\n          {!!account ? (\n            <Container maxWidth=\"lg\">\n              <Typography style={{color:'#fff'}} align=\"left\" variant=\"h5\" gutterBottom>\n                Staking\n              </Typography>\n\n              <Box mt={5}>\n                <div hidden={activeBanks.filter((bank) => bank.sectionInUI === 2).length === 0}>\n                  <Typography style={{color:'#fff'}} align=\"center\" variant=\"h5\" gutterBottom>\n                    Earn ASHARE by staking LP tokens\n                  </Typography>\n                  <Grid container spacing={3}>\n                    {activeBanks\n                      .filter((bank) => bank.sectionInUI === 2)\n                      .map((bank) => (\n                        <React.Fragment key={bank.name}>\n                          <StakeCard bank={bank} />\n                        </React.Fragment>\n                      ))}\n                  </Grid>\n                </div>\n\n                <div hidden={activeBanks.filter((bank) => bank.sectionInUI === 1).length === 0}>\n                  <Typography color=\"textPrimary\" variant=\"h6\" gutterBottom style={{ marginTop: '20px' }}>\n                    Earn TOMB by staking LP\n                  </Typography>\n                  {/*<Alert variant=\"filled\" severity=\"warning\">*/}\n                  {/*  All below pools have ended. Please unstake and collect your rewards.*/}\n                  {/*</Alert>*/}\n\n                  <Grid container spacing={3} style={{ marginTop: '20px' }}>\n                    {activeBanks\n                      .filter((bank) => bank.sectionInUI === 1)\n                      .map((bank) => (\n                        <React.Fragment key={bank.name}>\n                          <StakeCard bank={bank} />\n                        </React.Fragment>\n                      ))}\n                  </Grid>\n                </div>\n\n                <div hidden={activeBanks.filter((bank) => bank.sectionInUI === 0).length === 0}>\n                  <Typography color=\"textPrimary\" variant=\"h6\" gutterBottom style={{ marginTop: '20px' }}>\n                    Genesis Pools\n                  </Typography>\n                  <Grid container spacing={3}>\n                    {activeBanks\n                      .filter((bank) => bank.sectionInUI === 0)\n                      .map((bank) => (\n                        <React.Fragment key={bank.name}>\n                          <StakeCard bank={bank} />\n                        </React.Fragment>\n                      ))}\n                  </Grid>\n                </div>\n              </Box>\n            </Container>\n          ) : (\n            <UnlockWallet />\n          )}\n        </Route>\n        <Route path={`${path}/:bankId`}>\n          <BackgroundImage />\n          <Bank />\n        </Route>\n      </Page>\n    </Switch>\n  );\n};\n\nexport default Staking;\n"]},"metadata":{},"sourceType":"module"}